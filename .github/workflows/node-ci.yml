name: Node.js CI + Optional CD for CalendarMeet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Cache npm dependencies
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run tests (CI)
      - name: Run tests
        run: npm test

      # Build React frontend
      - name: Build React frontend
        run: |
          if [ -d "calendarmeet-app" ]; then
            cd calendarmeet-app
            npm ci
            npm run build
          fi

      # Copy backend files to EC2 root home
      - name: Copy backend files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ec2-3-133-115-8.us-east-2.compute.amazonaws.com
          username: ec2-user
          port: 22
          key: ${{ secrets.EC2_KEY }}
          source: |
            server.js
            package.json
            package-lock.json
            time-utils.js
          target: "/home/ec2-user"

      # Clean old frontend build on EC2
      - name: Clean old frontend build on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ec2-3-133-115-8.us-east-2.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: rm -rf /home/ec2-user/calendarmeet-app/dist/*

      # Copy frontend build (dist) to EC2 calendarmeet-app folder
      - name: Copy frontend build to EC2
        uses: appleboy/scp-action@master
        with:
          host: ec2-3-133-115-8.us-east-2.compute.amazonaws.com
          username: ec2-user
          port: 22
          key: ${{ secrets.EC2_KEY }}
          source: "calendarmeet-app/dist/**"
          target: "/home/ec2-user/calendarmeet-app/dist"

      # Restart Node.js server
      - name: Restart Node.js server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ec2-3-133-115-8.us-east-2.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/calendarmeet-app
            pm2 delete server || true
            pm2 start server.js --name server
            pm2 save
